plugins {
	id 'java'
	id 'com.diffplug.spotless' version '6.23.3'
	id 'io.spring.dependency-management' version '1.1.6'
}
// Настройки проекта (из MP-153)
group = 'ru.mentee.power'
version = '1.0.0'
sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

repositories {
	mavenCentral()
}

// Версии зависимостей (расширение конфигурации из MP-153)
ext {
	versions = [
			// Плагины
			spotless          : '6.23.3',

			// Основные зависимости
			postgresql        : '42.6.0',
			lombok           : '1.18.30',

			// Логирование
			slf4j            : '2.0.9',
			logback          : '1.4.11',

			// Тестирование
			junit            : '5.10.0',
			assertj          : '3.24.2',
			h2               : '2.2.224',  // Добавлено для тестов

			// Инструменты
			googleJavaFormat : '1.17.0'
	]
}

dependencies {
	// Основные зависимости
	implementation 'org.postgresql:postgresql:42.6.0'
	implementation 'org.slf4j:slf4j-api:2.0.9'
	implementation 'ch.qos.logback:logback-classic:1.4.11'

	// TestContainers
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation "org.testcontainers:testcontainers:1.20.4"
	testImplementation "org.testcontainers:junit-jupiter:1.20.4"
	testImplementation "org.testcontainers:postgresql:1.20.4"

	// H2 (для H2-тестов)
	testImplementation 'com.h2database:h2:2.2.224'

	// Дополнительные утилиты
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

// Обязательная секция для TestContainers
dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:1.19.1"
	}
}

spotless {
	format 'misc', {
		target '*.gradle', '.gitattributes', '.gitignore'
		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		googleJavaFormat("${versions.googleJavaFormat}").aosp().reflowLongStrings().skipJavadocFormatting()
		formatAnnotations()
		licenseHeader '/* @MENTEE_POWER (C)$YEAR */'
	}
}

compileJava {
	options.encoding = 'UTF-8'
}

compileTestJava {
	options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

test {
	useJUnitPlatform()
	systemProperty 'file.encoding', 'UTF-8'
}

tasks.withType(JavaExec) {
	systemProperty 'file.encoding', 'UTF-8'
}

test {
	useJUnitPlatform()
}
